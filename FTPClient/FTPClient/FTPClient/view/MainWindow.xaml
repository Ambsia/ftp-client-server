<Window x:Class="FTPClient.view.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:model="clr-namespace:FTPClient.model"
        xmlns:ftpLibrary="clr-namespace:FTPLibrary;assembly=FTPLibrary"
        mc:Ignorable="d"
        Title="File Transfer Client" Height="672.5" Width="1349.5" Closing="Window_Closing" BorderBrush="#FFB23C3C"
        FontFamily="Calibri Light" FontSize="14.667" BorderThickness="0,0,0,5">
    <Window.Resources>
        <Style x:Key="MyButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FF007689" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF008FA6" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid Margin="0,66,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="75*" MinHeight="30" MaxHeight="200" />
                <RowDefinition Height="5" />
                <RowDefinition Height="250*" />
                <RowDefinition Height="250*" />
                <RowDefinition Height="5" />
                <RowDefinition Height="150" MinHeight="30" MaxHeight="500" />
            </Grid.RowDefinitions>
            <Grid Grid.ColumnSpan="2" Grid.Row="0" Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30*" MinHeight="30" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border x:Name="ServerLogBorder" Grid.Row="0" BorderThickness="5,0,5,0" BorderBrush="#FFB23C3C" Margin="0,1,0,0"
				        Grid.ColumnSpan="1">
                    <Border.Style>
                        <!-- Background="#FFDEDBDB" BorderBrush="#FFB70042" -->
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Background" Value="WhiteSmoke" />
                            <Setter Property="BorderBrush" Value="#FFEAEAEA" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="#FFEE9449" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <ScrollViewer>
                        <TextBlock x:Name="clientLog" TextWrapping="Wrap" Background="Transparent"
						           FontFamily="Calibri" FontSize="14.667" Padding="50,0,0,0" Foreground="#FF888686" Margin="-30,0,0,0"
						           LineHeight="20" />
                    </ScrollViewer>
                </Border>
            </Grid>
            <GridSplitter Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Height="5" HorizontalAlignment="Stretch"
			              Background="#FFDEDCDC" />
            <Grid Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="2" Grid.RowSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="92*" />
                    <ColumnDefinition Width="578*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="577*" />
                    <ColumnDefinition Width="92*" />
                </Grid.ColumnDefinitions>
                <Grid Grid.ColumnSpan="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" MinHeight="30" />
                        <RowDefinition Height="*" MinHeight="0" />
                        <RowDefinition Height="5" MinHeight="5" />
                        <RowDefinition Height="*" MinHeight="0" />
                    </Grid.RowDefinitions>
                    <!--<Border x:Name="BorderDirectoryTextBox" BorderThickness="0,0,0,0" Background="WhiteSmoke" Height="30" VerticalAlignment="Top">-->
                    <!--<Border.Style>
                            -->
                    <!-- Background="#FFDEDBDB" BorderBrush="#FFB70042" -->
                    <!--
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="WhiteSmoke"/>
                                <Setter Property="BorderBrush" Value="#FFEAEAEA"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FFC3C3C3"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>-->
                    <Border HorizontalAlignment="Stretch" BorderThickness="30,0,0,0" Background="WhiteSmoke" Height="30"
					        VerticalAlignment="Top">
                        <Border.Style>
                            <!-- Background="#FFDEDBDB" BorderBrush="#FFB70042" -->
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="BorderBrush" Value="#FFEAEAEA" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="#FFD8D7D7" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <Image Source="/view/images/home-24.png" HorizontalAlignment="left" Width="26" Height="26" Margin="-28,0,0,0"
							       Opacity="0.14" />
                            <TextBox x:Name="TextBoxLocalDirectory" Text="C:\" HorizontalAlignment="Stretch"
							         Height="30" TextWrapping="Wrap" VerticalAlignment="Top" BorderThickness="0,0,0,0"
							         Background="Transparent" VerticalContentAlignment="Center"
							         FontFamily="Calibri" FontSize="14.667" Padding="50,0,0,0" Foreground="#FF888686" Margin="-30,0,0,0" />
                        </Grid>
                    </Border>
                    <!--</Border>-->
                    <TreeView Grid.Row="1" x:Name="LocalDirectoryTreeView" Width="Auto" FocusManager.IsFocusScope="true"
					          Background="#FFFFFFFF" BorderBrush="{x:Null}" Foreground="#FF888686" FontFamily="Calibri " FontSize="14"
					          MouseRightButtonDown="LocalDirectoryTreeView_MouseRightButtonDown">
                        <TreeView.Resources>
                            <Style TargetType="{x:Type model:TreeNodeItem}">
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Image Name="img" Width="20" Height="20" Stretch="Fill"
												       Source="{Binding 
                                       RelativeSource={RelativeSource 
                                       Mode=FindAncestor, 
                                       AncestorType={x:Type model:TreeNodeItem}}, 
                                       Path=Header, 
                                       Converter={x:Static model:HeaderToImageConverter.Instance}}" />
                                                <TextBlock Text="{Binding}" Margin="5,0" FontFamily="Calibri" FontSize="14.667">
                                                    <TextBlock.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="Open in File Explorer"
															          CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
															          Click="MenuItem_Click" />
                                                            <Separator />
                                                            <MenuItem Header="Upload"
															          CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
															          Click="UploadDirectory" />
                                                        </ContextMenu>
                                                    </TextBlock.ContextMenu>
                                                </TextBlock>
                                            </StackPanel>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TreeView.Resources>
                    </TreeView>
                    <GridSplitter Grid.Row="2" Height="5" HorizontalAlignment="Stretch" Background="#FFDEDCDC" />
                    <ListView x:Name="LocalDirectoryInfoListView" Grid.Row="3" FontFamily="Calibri" FontSize="14"
					          Foreground="#FF040404" BorderThickness="0">
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Upload"
								          CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
								          Click="UploadFile" />
                                <Separator />
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.View>

                            <GridView>
                                <GridViewColumn>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Image Width="16" Height="16" Source="images/file.png" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Filename" DisplayMemberBinding="{Binding FileName}" Width="270" />
                                <GridViewColumn Header="File Type" DisplayMemberBinding="{Binding FileType}" Width="130" />
                                <GridViewColumn Header="File Size" DisplayMemberBinding="{Binding FileSizeAsString}" Width="75" />
                                <GridViewColumn Header="File Last Modified" DisplayMemberBinding="{Binding DateTimeModified}" Width="180" />
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
                <GridSplitter Grid.Column="2" HorizontalAlignment="Stretch" Background="#FFDEDCDC" />
                <Grid Grid.Column="3" Grid.ColumnSpan="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" MinHeight="30" />
                        <RowDefinition Height="252*" />
                        <RowDefinition Height="5" MinHeight="5" />
                        <RowDefinition Height="251*" />
                    </Grid.RowDefinitions>
                    <Border HorizontalAlignment="Stretch" BorderThickness="30,0,0,0" Background="WhiteSmoke" Height="30"
					        VerticalAlignment="Top">
                        <Border.Style>
                            <!-- Background="#FFDEDBDB" BorderBrush="#FFB70042" -->
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="BorderBrush" Value="#FFEAEAEA" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="#FFD8D7D7" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <Image Source="images/remote_working.png" HorizontalAlignment="left" Width="26" Height="26" Margin="-28,0,0,0"
							       Opacity="0.14" />
                            <TextBox x:Name="TextBoxRemoteDirectory" Text="ftp:\" HorizontalAlignment="Stretch"
							         Height="30" TextWrapping="Wrap" VerticalAlignment="Top" BorderThickness="0,0,0,0"
							         Background="Transparent" VerticalContentAlignment="Center"
							         FontFamily="Calibri" FontSize="14.667" Padding="50,0,0,0" Foreground="#FF888686" Margin="-30,0,0,0" />
                        </Grid>
                    </Border>
                    <!--<Border x:Name="BorderRemoteDirectoryTextBox" BorderThickness="30,0,0,0" Height="30" VerticalAlignment="Top">
                        <Border.Style>
                            -->
                    <!-- Background="#FFDEDBDB" BorderBrush="#FFB70042" -->
                    <!--
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Background" Value="WhiteSmoke"/>
                                <Setter Property="BorderBrush" Value="#FFEAEAEA"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="#FFC3C3C3"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <TextBox x:Name="TextBoxRemoteDirectory" Text="ftp:\" 
                     Height="30" TextWrapping="Wrap" VerticalAlignment="Top" BorderThickness="0,0,0,0"  Background="Transparent" VerticalContentAlignment="Center"
                     FontFamily="Calibri" FontSize="14.667" Padding="50,0,0,0" Foreground="#FF888686" Margin="-30,0,0,0"/>
                    </Border>-->
                    <TreeView Grid.Row="1" x:Name="RemoteDirectoryTreeView" BorderBrush="{x:Null}" FontFamily="Calibri" FontSize="14"
					          MouseRightButtonDown="RemoteDirectoryTreeView_MouseRightButtonDown"
					          MouseDoubleClick="RemoteDirectoryTreeView_MouseDoubleClick" Foreground="#FF888686">
                        <TreeView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Refresh" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" Click="RequestUpdate" />
                            </ContextMenu>
                        </TreeView.ContextMenu>
                        <TreeView.Resources>
                            <Style TargetType="{x:Type model:TreeNodeItem}">
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Image Name="img" Width="20" Height="20" Stretch="Fill"
												       Source="{Binding 
                                       RelativeSource={RelativeSource 
                                       Mode=FindAncestor, 
                                       AncestorType={x:Type model:TreeNodeItem}}, 
                                       Path=Tag, 
                                       Converter={x:Static model:HeaderToImageConverterRemote.Instance}}" />
                                                <TextBlock Text="{Binding}" Margin="5,0" FontFamily="Calibri" FontSize="14.667">
                                                    <TextBlock.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Header="Download"
															          CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
															          Click="Download" />
                                                        </ContextMenu>
                                                    </TextBlock.ContextMenu>
                                                </TextBlock>
                                            </StackPanel>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TreeView.Resources>

                    </TreeView>
                    <GridSplitter Grid.Row="2" HorizontalAlignment="Stretch" Background="#FFDEDCDC" />
                    <ListView Grid.Row="3" x:Name="RemoteDirectoryInfoListView" FontFamily="Calibri" FontSize="14" Foreground="Black" BorderThickness="0">
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Download"
								          CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
								          Click="Download" />
                                <Separator />
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Image Width="16" Height="16" Source="images/file.png" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Filename" DisplayMemberBinding="{Binding FileName}" Width="270" />
                                <GridViewColumn Header="File Type" DisplayMemberBinding="{Binding FileType}" Width="130" />
                                <GridViewColumn Header="File Size" DisplayMemberBinding="{Binding FileSizeAsString}" Width="75" />
                                <GridViewColumn Header="File Last Modified" DisplayMemberBinding="{Binding DateTimeModified}" Width="180" />
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </Grid>
            <GridSplitter Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch"
			              Background="#FFDEDCDC" />
            <Grid Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30*" MinHeight="30" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border x:Name="ServerProgress" Grid.Row="0" BorderThickness="5,0,5,0" BorderBrush="#FFB23C3C" Margin="0,1,0,0"
				        Grid.ColumnSpan="1">
                    <Border.Style>
                        <!-- Background="#FFDEDBDB" BorderBrush="#FFB70042" -->
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Background" Value="WhiteSmoke" />
                            <Setter Property="BorderBrush" Value="#FFEAEAEA" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="#FFEE9449" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <ScrollViewer>
                        <ListView x:Name="ProgressListview" Grid.Row="3" FontFamily="Calibri" FontSize="14" Foreground="Black" BorderThickness="0">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Width="16" Height="16" Source="images/file.png" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="File" DisplayMemberBinding="{Binding FileName}" Width="600" />
                                    <GridViewColumn Header="Upload" Width="70">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <CheckBox IsEnabled="False" IsChecked="{Binding IsUpload}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Download" Width="80">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <CheckBox IsEnabled="False" IsChecked="{Binding IsDownload}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Size" DisplayMemberBinding="{Binding Size}" Width="100" />
                                    <GridViewColumn Header="Progress" Width="190">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <ProgressBar Width="170" Height="20" Maximum="100"
													             Value="{Binding Progress, UpdateSourceTrigger=PropertyChanged}" Foreground="#FF50A050" />
                                                    <TextBlock Text="{Binding Progress, StringFormat={}{0:0}%}" HorizontalAlignment="Center"
													           VerticalAlignment="Center" FontFamily="Calibri" FontSize="14" />
                                                </Grid>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Status"
									                DisplayMemberBinding="{Binding Completed, UpdateSourceTrigger=PropertyChanged}" Width="180" />

                                </GridView>
                            </ListView.View>
                        </ListView>
                    </ScrollViewer>
                </Border>
            </Grid>
        </Grid>
        <Grid Margin="0,641,0,0" />
        <Rectangle Height="67" VerticalAlignment="Top" Fill="WhiteSmoke" />
        <Menu x:Name="menu" Height="25" VerticalAlignment="Top"/>
        <Border x:Name="txtBoxBorder" BorderThickness="30,0,0,0" HorizontalAlignment="Left" Height="30" Margin="10,30,0,0"
		        VerticalAlignment="Top" Width="203">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Background" Value="#FFE8E8E8" />
                    <Setter Property="BorderBrush" Value="#FFC1C1C1" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#FF898989" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <TextBox x:Name="txtIP"
			         Text="{Binding Ip, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
			         Height="30" TextWrapping="Wrap" VerticalAlignment="Top" BorderThickness="0,0,0,0" Background="Transparent"
			         VerticalContentAlignment="Center"
			         FontFamily="Calibri" FontSize="14.667" Padding="50,0,0,0" Foreground="#FF888686" Width="Auto"
			         Margin="-30,0,0,0" GotFocus="IpGotFocus" LostFocus="IpLostFocus">
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <DockPanel>
                            <Border BorderBrush="#FFB22222" BorderThickness="1,1,1,1">
                                <AdornedElementPlaceholder x:Name="controlWithError" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
            </TextBox>
        </Border>
        <Border x:Name="txtBoxBorder2" BorderThickness="30,0,0,0" HorizontalAlignment="Left" Height="30" Margin="228,30,0,0"
		        VerticalAlignment="Top" Width="130">
            <Border.Style>
                <!-- Background="#FFDEDBDB" BorderBrush="#FFB70042" -->
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Background" Value="#FFE8E8E8" />
                    <Setter Property="BorderBrush" Value="#FFC1C1C1" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#FF898989" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <TextBox x:Name="txtPort"
			         Text="{Binding Port, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
			         Height="30" TextWrapping="Wrap" VerticalAlignment="Top" BorderThickness="0,0,0,0" Background="Transparent"
			         VerticalContentAlignment="Center"
			         FontFamily="Calibri" FontSize="14.667" Padding="50,0,0,0" Foreground="#FF888686" Margin="-30,0,0,0"
			         GotFocus="PortGotFocus" LostFocus="PortLostFocus">
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <DockPanel>
                            <Border BorderBrush="#FFB22222" BorderThickness="1,1,1,1">
                                <AdornedElementPlaceholder x:Name="controlWithError" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
            </TextBox>
        </Border>

        <Border x:Name="BorderTextName" BorderThickness="30,0,0,0" HorizontalAlignment="Left" Height="30" Margin="373,30,0,0"
		        VerticalAlignment="Top" Width="203">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Background" Value="#FFE8E8E8" />
                    <Setter Property="BorderBrush" Value="#FFC1C1C1" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#FF898989" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <TextBox x:Name="txtUsername"
			         Text="{Binding UserName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
			         Height="30" TextWrapping="Wrap" VerticalAlignment="Top" BorderThickness="0,0,0,0" Background="Transparent"
			         VerticalContentAlignment="Center"
			         FontFamily="Calibri" FontSize="14.667" Padding="50,0,0,0" Foreground="#FF888686" Width="Auto"
			         Margin="-30,0,0,0" GotFocus="UsernameGotFocus" LostFocus="UsernameLostFocus">
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <DockPanel>
                            <Border BorderBrush="#FFB22222" BorderThickness="1,1,1,1">
                                <AdornedElementPlaceholder x:Name="controlWithError" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
            </TextBox>
        </Border>
        <Border x:Name="BorderTextPassword" BorderThickness="30,0,0,0" HorizontalAlignment="Left" Height="30"
		        Margin="591,30,0,0" VerticalAlignment="Top" Width="203">
            <Border.Style>
                <!-- Background="#FFDEDBDB" BorderBrush="#FFB70042" -->
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Background" Value="#FFE8E8E8" />
                    <Setter Property="BorderBrush" Value="#FFC1C1C1" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#FF898989" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <PasswordBox x:Name="txtPassword" Password="Password..."
			             Height="30" VerticalAlignment="Top" BorderThickness="0,0,0,0" Background="Transparent"
			             VerticalContentAlignment="Center"
			             FontFamily="Calibri" FontSize="14.667" Padding="50,0,0,0" Foreground="#FF888686" Margin="-30,0,0,0"
			             GotFocus="PasswordGotFocus" LostFocus="PasswordLostFocus" />
        </Border>
        <Button x:Name="btnConnection" Content="CONNECT" Style="{StaticResource MyButtonStyle}" Margin="1142,30,0,0"
		        VerticalAlignment="Top" FontFamily="Calibri Light" Height="30" FontSize="17.333" Click="Connect"
		        Foreground="White" Background="#FF669966" HorizontalAlignment="Left" Width="106" />
        <Label x:Name="ErrorLabel" Content="" HorizontalAlignment="Left" Margin="1202,30,0,0" VerticalAlignment="Top"
		       FontSize="14" FontFamily="Calibri Light" Height="30" Background="{x:Null}" Foreground="#FFE03737" />
        <Button x:Name="btnConnection_Copy" Content="SAVE" Style="{StaticResource MyButtonStyle}" Margin="1258,30,0,0"
		        VerticalAlignment="Top" FontFamily="Calibri Light" Height="30" FontSize="17.333" Click="Save"
		        Foreground="White" Background="#FFAAC9CF" HorizontalAlignment="Left" Width="81" />
        <Border x:Name="BorderDownloadPath" BorderThickness="30,0,0,0" HorizontalAlignment="Left" Height="30"
		        Margin="809,30,0,0" VerticalAlignment="Top" Width="323">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Background" Value="#FFE8E8E8" />
                    <Setter Property="BorderBrush" Value="#FFC1C1C1" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#FF898989" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <TextBox x:Name="txtDownloadPath"
			         Text="{Binding DownloadPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
			         Height="30" TextWrapping="Wrap" VerticalAlignment="Top" BorderThickness="0,0,0,0" Background="Transparent"
			         VerticalContentAlignment="Center"
			         FontFamily="Calibri" FontSize="14.667" Padding="50,0,0,0" Foreground="#FF888686" Margin="-30,0,0,0">
                <Validation.ErrorTemplate>
                    <ControlTemplate>
                        <DockPanel>
                            <Border BorderBrush="#FFB22222" BorderThickness="1,1,1,1">
                                <AdornedElementPlaceholder x:Name="controlWithError" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Validation.ErrorTemplate>
            </TextBox>
        </Border>
    </Grid>
</Window>